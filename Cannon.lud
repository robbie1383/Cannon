(define "Step"
     (move Step (directions {Forward FR FL} of:All) (to if:(is Empty (to))))
)

(define "Capture"
   (move Step (directions {Forward Leftward Rightward FR FL} of:All) 
            (to if:(is Enemy (who at:(to))) (apply (remove (to))))
   )
)

(define "Retreat"
   (move Hop (directions {Backward BR BL} of:All) 
            (between (exact 1) if:(is Empty (between)))
            (to if:((and (is Empty(to)) ("EnemyAround"))) 
                 (apply (remove (to)))
            )
   )
)

(define "EnemyAround"
    (not (all Sites (sites Around (from) All)
        if:(not (is Enemy (who at:(site)))))
    )
)

(define "StepCannon"
     (move Hop (directions All)
            (between (exact 2) if:(is Friend (who at:(between))))
            (to if:(is Empty(to)))
   )
)

(define "AheadSite" 
    (ahead (from) #1 (directions Vertex from:(from) to:(to)))
)

(define "IsCannon" 
    (and (= (id "Marker" Mover) (what at:(from))) 
            (and (is Friend (who at:("AheadSite" steps:1))) (is Friend (who at:("AheadSite" steps:2)))
            )
    )
)

(define "ShootCannon"
    (forEach Direction All
        (if (and ("IsCannon") (is Empty (("AheadSite" steps:3))))
            (if (is Enemy (who at:("AheadSite" steps:4)))
                (move Remove ("AheadSite" steps:4))
            )
        )
    )
   (forEach Direction All
        (if (and ("IsCannon") (is Empty (("AheadSite" steps:4))))
            (if (is Enemy (who at:("AheadSite" steps:5)))
                (move Remove ("AheadSite" steps:5))
            )
        )
    )
)

(define "DestroyedTownP1" (not (is Within (id "Town" P1) in:(sites Bottom))) )

(define "DestroyedTownP2" (not (is Within (id "Town" P2) in:(sites Top))) )


// ---------------------------------------------------------------------------------------------------------------------------------

(game "Cannon"
    (players {(player N) (player S)})
    (equipment
        {
            (board (square 10) use:Vertex)
            (piece "Marker" Each (or {("Step") ("Capture") ("Retreat") ("StepCannon") ("ShootCannon")}))
            (piece "Town" Each)
            (regions P1 (sites Bottom))
            (regions P2 (sites Top))
            (hand Each)
        }
    )
    (rules
        (start
            {
                (place "Marker2" {"B9" "B8" "B7" "D9" "D8" "D7" "F9" "F8" "F7" "H9" "H8" "H7" "J9" "J8" "J7"})
                (place "Marker1" {"A4" "A3" "A2" "C4" "C3" "C2" "E4" "E3" "E2" "G4" "G3" "G2" "I4" "I3" "I2"})
                (place "Town" "Hand" count:1)
            }
        )
        phases:{
        (phase "TownPlacement"
            (play (move 
                    (from (handSite Mover)) 
                    (to (difference (sites Mover) (sites Corners)) if:(is Empty(to)))
                    )
            )
            (nextPhase Mover (is Empty (handSite Mover)) "Play")
        )
        (phase "Play"
            (play (forEach Piece))
            (end {
                (if "DestroyedTownP1" (result P2 Win))
                (if "DestroyedTownP2" (result P1 Win))
            })
        )}
       
    )
)

// ---------------------------------------------------------------------------------------------------------------------------------

(metadata 
    (graphics
        {
            (player Colour P1 (colour Purple))
            (player Colour P2 (colour White))
            (show Edges Diagonal Hidden)
        }
    )
    (ai
        (bestAgent "Alpha-Beta")
        (heuristics {
            (material transformation:(divNumInitPlacement) pieceWeights:{
                (pair "Town1" 200.0)
                (pair "Town2" 200.0)
                (pair "Marker1" 10.0)
                (pair "Marker2" 10.0)
            })
            (lineCompletionHeuristic targetLength:3)
            (mobilitySimple weight:0.5)
        })
        )
    )
)

